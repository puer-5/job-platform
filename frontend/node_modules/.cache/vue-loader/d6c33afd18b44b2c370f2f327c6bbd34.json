{"remainingRequest":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\src\\views\\Login.vue?vue&type=style&index=0&id=26084dc2&scoped=true&lang=css","dependencies":[{"path":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\src\\views\\Login.vue","mtime":1750314477213},{"path":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1750207404238},{"path":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1750207407070},{"path":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1750207405229},{"path":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1750207403375},{"path":"E:\\微服务开发实验\\期末项目\\job-platform\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1750207406160}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoubG9naW4tY29udGFpbmVyIHsNCiAgZGlzcGxheTogZmxleDsNCiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGhlaWdodDogMTAwdmg7DQogIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQoNCi5sb2dpbi1ib3ggew0KICB3aWR0aDogNDAwcHg7DQogIHBhZGRpbmc6IDQwcHg7DQogIGJhY2tncm91bmQ6IHdoaXRlOw0KICBib3JkZXItcmFkaXVzOiA4cHg7DQogIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjEpOw0KfQ0KDQpoMiB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgY29sb3I6ICMzMzM7DQogIG1hcmdpbi1ib3R0b206IDMwcHg7DQp9DQoNCi5mb3JtLWdyb3VwIHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCg0KbGFiZWwgew0KICBkaXNwbGF5OiBibG9jazsNCiAgbWFyZ2luLWJvdHRvbTogNXB4Ow0KICBjb2xvcjogIzY2NjsNCn0NCg0KaW5wdXQgew0KICB3aWR0aDogMTAwJTsNCiAgcGFkZGluZzogMTBweDsNCiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCmlucHV0OmZvY3VzIHsNCiAgb3V0bGluZTogbm9uZTsNCiAgYm9yZGVyLWNvbG9yOiAjNDA5ZWZmOw0KfQ0KDQoubG9naW4tYnRuIHsNCiAgd2lkdGg6IDEwMCU7DQogIHBhZGRpbmc6IDEycHg7DQogIGJhY2tncm91bmQtY29sb3I6ICM0MDllZmY7DQogIGNvbG9yOiB3aGl0ZTsNCiAgYm9yZGVyOiBub25lOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgZm9udC1zaXplOiAxNnB4Ow0KICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3M7DQp9DQoNCi5sb2dpbi1idG46aG92ZXI6bm90KDpkaXNhYmxlZCkgew0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjZiMWZmOw0KfQ0KDQoubG9naW4tYnRuOmRpc2FibGVkIHsNCiAgYmFja2dyb3VuZC1jb2xvcjogI2EwY2ZmZjsNCiAgY3Vyc29yOiBub3QtYWxsb3dlZDsNCn0NCg0KLmVycm9yLW1lc3NhZ2Ugew0KICBjb2xvcjogI2Y1NmM2YzsNCiAgdGV4dC1hbGlnbjogY2VudGVyOw0KICBtYXJnaW4tdG9wOiAxMHB4Ow0KICBmb250LXNpemU6IDE0cHg7DQp9DQoNCi50ZXN0LXVzZXJzIHsNCiAgbWFyZ2luLXRvcDogMzBweDsNCiAgcGFkZGluZy10b3A6IDIwcHg7DQogIGJvcmRlci10b3A6IDFweCBzb2xpZCAjZWVlOw0KfQ0KDQoudGVzdC11c2VycyBoMyB7DQogIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgY29sb3I6ICM2NjY7DQogIG1hcmdpbi1ib3R0b206IDE1cHg7DQp9DQoNCi51c2VyLWxpc3Qgew0KICBkaXNwbGF5OiBmbGV4Ow0KICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOw0KICBnYXA6IDEwcHg7DQp9DQoNCi51c2VyLWl0ZW0gew0KICBwYWRkaW5nOiAxMHB4Ow0KICBiYWNrZ3JvdW5kOiAjZjhmOWZhOw0KICBib3JkZXItcmFkaXVzOiA0cHg7DQogIGN1cnNvcjogcG9pbnRlcjsNCiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzOw0KfQ0KDQoudXNlci1pdGVtOmhvdmVyIHsNCiAgYmFja2dyb3VuZDogI2U5ZWNlZjsNCn0NCg0KLnVzZXItaXRlbSBwIHsNCiAgbWFyZ2luOiA1cHggMDsNCiAgZm9udC1zaXplOiAxNHB4Ow0KICBjb2xvcjogIzY2NjsNCn0NCg=="},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";AAsKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"login-container\">\r\n    <div class=\"login-box\">\r\n      <h2>求职平台登录</h2>\r\n      <form @submit.prevent=\"handleLogin\">\r\n        <div class=\"form-group\">\r\n          <label for=\"username\">用户名</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"username\"\r\n            v-model=\"loginForm.username\"\r\n            required\r\n            placeholder=\"请输入用户名\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"password\">密码</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            v-model=\"loginForm.password\"\r\n            required\r\n            placeholder=\"请输入密码\"\r\n          />\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <button type=\"submit\" class=\"login-btn\" :disabled=\"loading\">\r\n            {{ loading ? '登录中...' : '登录' }}\r\n          </button>\r\n        </div>\r\n        <div v-if=\"errorMessage\" class=\"error-message\">\r\n          {{ errorMessage }}\r\n        </div>\r\n      </form>\r\n      <div class=\"test-users\">\r\n        <h3>测试账号</h3>\r\n        <div class=\"user-list\">\r\n          <div v-for=\"(user, index) in testUsers\" :key=\"index\" class=\"user-item\" @click=\"useTestUser(user)\">\r\n            <p><strong>用户名：</strong>{{ user.username }}</p>\r\n            <p><strong>密码：</strong>{{ user.password }}</p>\r\n            <p><strong>类型：</strong>{{ user.userType }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n  name: 'Login',\r\n  data() {\r\n    return {\r\n      loginForm: {\r\n        username: '',\r\n        password: ''\r\n      },\r\n      loading: false,\r\n      errorMessage: '',\r\n      testUsers: [\r\n        {\r\n          username: 'jobseeker1',\r\n          password: '123456',\r\n          userType: 'USER'\r\n        },\r\n        {\r\n          username: 'jobseeker2',\r\n          password: '123456',\r\n          userType: 'USER'\r\n        },\r\n        {\r\n          username: 'employer1',\r\n          password: '123456',\r\n          userType: 'ENTERPRISE'\r\n        },\r\n        {\r\n          username: 'employer2',\r\n          password: '123456',\r\n          userType: 'ENTERPRISE'\r\n        },\r\n        {\r\n          username: 'admin',\r\n          password: '123456',\r\n          userType: 'ADMIN'\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    useTestUser(user) {\r\n      this.loginForm.username = user.username\r\n      this.loginForm.password = user.password\r\n    },\r\n    async handleLogin() {\r\n      this.loading = true\r\n      this.errorMessage = ''\r\n      \r\n      try {\r\n        // 创建登录数据对象，确保数据格式正确\r\n        const loginData = {\r\n          username: this.loginForm.username.trim(),\r\n          password: this.loginForm.password.trim()\r\n        };\r\n        \r\n        console.log('Sending login request with data:', loginData);\r\n        \r\n        const response = await axios.post('/api/admin/login', loginData, {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json'\r\n          }\r\n        });\r\n        \r\n        console.log('Login response:', response.data);\r\n        \r\n        // 检查响应中是否包含 token\r\n        if (response.data && response.data.token) {\r\n          // 从 token 中解析用户类型\r\n          const token = response.data.token;\r\n          const tokenData = JSON.parse(atob(token.split('.')[1]));\r\n          const userType = tokenData.userType;\r\n          \r\n          console.log('Token data:', tokenData);\r\n          \r\n          // 保存 token 和用户类型\r\n          localStorage.setItem('token', token);\r\n          localStorage.setItem('userType', userType);\r\n          \r\n          // 设置 axios 默认请求头\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // 根据用户类型跳转到不同页面\r\n          if (userType === 'USER') {\r\n            await this.$router.push('/jobseeker/home');\r\n          } else if (userType === 'ENTERPRISE') {\r\n            // 暂时跳转到求职者页面，因为还没有雇主页面\r\n            await this.$router.push('/jobseeker/home');\r\n          } else if (userType === 'ADMIN') {\r\n            // 暂时跳转到求职者页面，因为还没有管理员页面\r\n            await this.$router.push('/jobseeker/home');\r\n          } else {\r\n            this.errorMessage = '未知的用户类型';\r\n          }\r\n        } else {\r\n          this.errorMessage = '登录响应格式不正确';\r\n        }\r\n      } catch (error) {\r\n        console.error('Login error:', error);\r\n        console.error('Request data:', this.loginForm);\r\n        if (error.response) {\r\n          console.error('Error response:', error.response.data);\r\n          this.errorMessage = error.response.data.message || '登录失败，请检查用户名和密码';\r\n        } else {\r\n          this.errorMessage = '登录失败，请稍后重试';\r\n        }\r\n      } finally {\r\n        this.loading = false\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.login-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f5f5f5;\r\n}\r\n\r\n.login-box {\r\n  width: 400px;\r\n  padding: 40px;\r\n  background: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\nh2 {\r\n  text-align: center;\r\n  color: #333;\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\nlabel {\r\n  display: block;\r\n  margin-bottom: 5px;\r\n  color: #666;\r\n}\r\n\r\ninput {\r\n  width: 100%;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n  border-color: #409eff;\r\n}\r\n\r\n.login-btn {\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: #409eff;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.login-btn:hover:not(:disabled) {\r\n  background-color: #66b1ff;\r\n}\r\n\r\n.login-btn:disabled {\r\n  background-color: #a0cfff;\r\n  cursor: not-allowed;\r\n}\r\n\r\n.error-message {\r\n  color: #f56c6c;\r\n  text-align: center;\r\n  margin-top: 10px;\r\n  font-size: 14px;\r\n}\r\n\r\n.test-users {\r\n  margin-top: 30px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.test-users h3 {\r\n  text-align: center;\r\n  color: #666;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.user-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 10px;\r\n}\r\n\r\n.user-item {\r\n  padding: 10px;\r\n  background: #f8f9fa;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.user-item:hover {\r\n  background: #e9ecef;\r\n}\r\n\r\n.user-item p {\r\n  margin: 5px 0;\r\n  font-size: 14px;\r\n  color: #666;\r\n}\r\n</style> "]}]}